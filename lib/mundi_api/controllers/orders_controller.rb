# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module MundiApi
  class OrdersController < BaseController
    @@instance = OrdersController.new
    # Singleton instance of the controller class
    def self.instance
      @@instance
    end

    # Gets an order
    # @param [String] order_id Required parameter: Order id
    # @return GetOrderResponse response from the API call
    def get_order(order_id)

      # prepare query url
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/orders/{order_id}'
      _query_builder = APIHelper.append_url_with_template_parameters _query_builder, {
        'order_id' => order_id
      }
      _query_url = APIHelper.clean_url _query_builder

      # prepare headers
      _headers = {
        'accept' => 'application/json'
      }

      # prepare and execute HttpRequest
      _request = @http_client.get _query_url, headers: _headers
      BasicAuth.apply(_request)
      _context = execute_request(_request)
      validate_response(_context)

      # return appropriate response type
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      return GetOrderResponse.from_hash(decoded)
    end

    # Gets all orders
    # @return ListOrderResponse response from the API call
    def get_orders

      # prepare query url
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/orders'
      _query_url = APIHelper.clean_url _query_builder

      # prepare headers
      _headers = {
        'accept' => 'application/json'
      }

      # prepare and execute HttpRequest
      _request = @http_client.get _query_url, headers: _headers
      BasicAuth.apply(_request)
      _context = execute_request(_request)
      validate_response(_context)

      # return appropriate response type
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      return ListOrderResponse.from_hash(decoded)
    end

    # Creates a new Order
    # @param [CreateOrderRequest] body Required parameter: Request for creating an order
    # @return GetOrderResponse response from the API call
    def create_order(body)

      # prepare query url
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/orders'
      _query_url = APIHelper.clean_url _query_builder

      # prepare headers
      _headers = {
        'accept' => 'application/json',
        'content-type' => 'application/json; charset=utf-8'
      }

      # prepare and execute HttpRequest
      _request = @http_client.post _query_url, headers: _headers, parameters: body.to_json
      BasicAuth.apply(_request)
      _context = execute_request(_request)
      validate_response(_context)

      # return appropriate response type
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      return GetOrderResponse.from_hash(decoded)
    end
  end
end
