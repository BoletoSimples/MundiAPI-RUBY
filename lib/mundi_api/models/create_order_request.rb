# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MundiApi
  # Request for creating an order
  class CreateOrderRequest < BaseModel
    # Items
    # @return [List of CreateOrderItemRequest]
    attr_accessor :items

    # Customer
    # @return [CreateCustomerRequest]
    attr_accessor :customer

    # Payment data
    # @return [List of CreatePaymentRequest]
    attr_accessor :payments

    # The order code
    # @return [String]
    attr_accessor :code

    # The customer id
    # @return [String]
    attr_accessor :customer_id

    # Shipping data
    # @return [CreateShippingRequest]
    attr_accessor :shipping

    # Metadata
    # @return [Array<String, String>]
    attr_accessor :metadata

    # Defines whether the order will go through anti-fraud
    # @return [Boolean]
    attr_accessor :antifraud_enabled

    # A mapping from model property names to API property names.
    def self.names
      if @_hash.nil?
        @_hash = {}
        @_hash['items'] = 'items'
        @_hash['customer'] = 'customer'
        @_hash['payments'] = 'payments'
        @_hash['code'] = 'code'
        @_hash['customer_id'] = 'customer_id'
        @_hash['shipping'] = 'shipping'
        @_hash['metadata'] = 'metadata'
        @_hash['antifraud_enabled'] = 'antifraud_enabled'
      end
      @_hash
    end

    def initialize(items = nil,
                   customer = nil,
                   payments = nil,
                   code = nil,
                   customer_id = nil,
                   shipping = nil,
                   metadata = nil,
                   antifraud_enabled = nil)
      @items = items
      @customer = customer
      @payments = payments
      @code = code
      @customer_id = customer_id
      @shipping = shipping
      @metadata = metadata
      @antifraud_enabled = antifraud_enabled
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      items = nil
      unless hash['items'].nil?
        items = []
        hash['items'].each do |structure|
          items << (CreateOrderItemRequest.from_hash(structure) if structure)
        end
      end
      customer = CreateCustomerRequest.from_hash(hash['customer']) if
        hash['customer']
      # Parameter is an array, so we need to iterate through it
      payments = nil
      unless hash['payments'].nil?
        payments = []
        hash['payments'].each do |structure|
          payments << (CreatePaymentRequest.from_hash(structure) if structure)
        end
      end
      code = hash['code']
      customer_id = hash['customer_id']
      shipping = CreateShippingRequest.from_hash(hash['shipping']) if
        hash['shipping']
      metadata = hash['metadata']
      antifraud_enabled = hash['antifraud_enabled']

      # Create object from extracted values.
      CreateOrderRequest.new(items,
                             customer,
                             payments,
                             code,
                             customer_id,
                             shipping,
                             metadata,
                             antifraud_enabled)
    end
  end
end
